/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // create fatjar
    id 'com.gradleup.shadow' version '8.3.3'

    // create deb
    id "com.netflix.nebula.ospackage" version "11.10.0"

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation libs.groovy.all

    // This dependency is used by the application.
    implementation libs.guava

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation libs.spock.core
    testImplementation libs.junit

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

task buildAppDeb(type: Deb) {
        arch 'amd64'
        maintainer packageMaintainer
        uploaders packageUploaders
        url packageUrl
        distribution packageDistribution
        packageDescription 'Hello groovy POC for cli'

        requires 'default-jre-headless' or 'openjdk-21-jre-headless'

        into '/usr'

        from("build/libs/hello-groovy-0.2.0-all.jar") {
            into 'share/hello-groovy'
        }

        from('src/scripts') {
            into 'bin'
            fileMode 0755
        }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'sing.cli.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
